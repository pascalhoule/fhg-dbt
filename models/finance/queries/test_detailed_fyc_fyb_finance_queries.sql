{{ config(
    alias = 'test_detailed_fyc_fyb', 
    database = 'finance', 
    schema = 'queries', 
    grants = {'ownership': ['FINANCE']},
    materialization = "view") }} 

WITH ACCRUAL_COMM_AGT_SPLIT AS (
    SELECT
        DISTINCT A.POLICYCODE,
        B.AGENTNAME AS AGENTFULLNAME,
        BA.USERDEFINED2,
        A.SPLITCODE
    FROM
        {{ ref('accruals_finance_insurance') }} A
        JOIN {{ ref('brokeradvanced_vc_finance_insurance') }} BA ON A.OWNERCODE = BA.AGENTCODE
        JOIN {{ ref('broker_vc_finance_insurance') }} B ON A.OWNERCODE = B.AGENTCODE
    WHERE
        OWNERTYPE = 3
        AND CHQCODE != 0
        AND SPLITCODE != 0
),
ACCRUAL_COMM_AGT AS (
    SELECT
        DISTINCT A.POLICYCODE,
        B.AGENTNAME AS AGENTFULLNAME,
        A.OWNERCODE,
        BA.USERDEFINED2,
        A.SPLITCODE,
        COUNT(DISTINCT A.OWNERCODE) OVER (PARTITION BY A.POLICYCODE) AS NUM_OF_AGTS 
    FROM
        {{ ref('accruals_finance_insurance') }} A
        JOIN {{ ref('brokeradvanced_vc_finance_insurance') }} BA on A.OWNERCODE = BA.AGENTCODE
        JOIN {{ ref('broker_vc_finance_insurance') }} B on A.OWNERCODE = B.AGENTCODE
    WHERE
        OWNERTYPE = 3
        AND CHQCODE != 0
        AND SPLITCODE = 0
        AND POLICYCODE != 0
),
ACCRUAL_COMM_AGT_CORRECT AS (
    --accounts for the case where there were 2 agents on a policy but now only 1 or the agent changes
    SELECT
        ACCRUAL_COMM_AGT.*
    FROM
        ACCRUAL_COMM_AGT
        JOIN {{ ref('policyagentlinking_finance_insurance') }} LINK ON ACCRUAL_COMM_AGT.POLICYCODE = LINK.POLICYCODE
    WHERE
        NUM_OF_AGTS > 1
        AND MAINAGENT = 1 
        AND ACCRUAL_COMM_AGT.OWNERCODE = LINK.AGENTCODE
),
MOST_DATA AS (
    SELECT
        A.OWNERCODE AS OWNERCODE,
        A.ACCRUALCODE AS ACCRUALCODE_FROM_ACCURALS,
        A.CHQCODE,
        C.COMMISSIONRUNCODE,
        RUN.TITLE AS COMMISSION_RUN,
        'Unknown' AS OCCURRENCE_TYPE,
        COALESCE(
            COMM_AGT_SPLIT.AGENTFULLNAME,
            ACCRUAL_COMM_AGT_CORRECT.AGENTFULLNAME,
            COMM_AGT.AGENTFULLNAME
        ) AS COMMISSIONABLE_AGENT,
        COALESCE(
            COMM_AGT_SPLIT.USERDEFINED2,
            ACCRUAL_COMM_AGT_CORRECT.USERDEFINED2,
            COMM_AGT.USERDEFINED2
        ) AS COMMISSIONABLE_AGENT_ID,
        CASE
            WHEN A.OWNERTYPE = 1 THEN 'MGA'
            WHEN A.OWNERTYPE = 2 THEN 'AGA'
            WHEN A.OWNERTYPE = 3 THEN 'Broker'
            ELSE 'Unclassified'
        END AS OWNER_TYPE,
        A.AGENTFULLNAME AS OWNER_NAME,
        B.COMPANYNAME AS OWNER_COMPANY,
        TRIM(A.POLICYNUMBEREX) AS POLICY_NUMBER,
        A.POLICYCODE AS POLICYCODE,
        CARRIER.ICNAME AS CARRIER,
        CASE
            WHEN CONTAINS(A.PLANNAMEEX, '(UpToMin)') THEN REPLACE(A.PLANNAMEEX, '(UpToMin)', '')
            WHEN CONTAINS(A.PLANNAMEEX, '(MinToMax)') THEN REPLACE(A.PLANNAMEEX, '(MinToMax)', '')
            WHEN CONTAINS(A.PLANNAMEEX, '(AboveMax)') THEN REPLACE(A.PLANNAMEEX, '(AboveMax)', '')
            ELSE A.PLANNAMEEX
        END AS PLANNAME,
        C.STATUS,
        CASE
            WHEN A.TRXTYPE = 'FYC' THEN A.PAID
            ELSE 0
        END AS TOTAL_FYC,
        CASE
            WHEN A.TRXTYPE = 'FYB' THEN A.PAID
            ELSE 0
        END AS TOTAL_FYB,
        POSTDATE::DATE AS POSTDATE,
        A.COMMPREM AS TRANSACTION_COMMISSIONABLE_PREMIUM,
        A.COMMRATE AS COMMISSION_RATE,
        A.SPLITSHARE AS COMMISSION_SPLIT_SHARE,
        A.SPLITCODE
    FROM
        {{ ref('accruals_finance_insurance') }} A
        JOIN {{ ref('cheque_finance_insurance') }} C ON C.CHQCODE = A.CHQCODE
        JOIN {{ ref('commissionrun_finance_insurance') }} RUN ON C.COMMISSIONRUNCODE = RUN.COMMISSIONRUNCODE
        LEFT JOIN ACCRUAL_COMM_AGT_SPLIT COMM_AGT_SPLIT ON A.POLICYCODE = COMM_AGT_SPLIT.POLICYCODE
        AND A.SPLITCODE = COMM_AGT_SPLIT.SPLITCODE
        LEFT JOIN ACCRUAL_COMM_AGT COMM_AGT ON A.POLICYCODE = COMM_AGT.POLICYCODE
        --AND A.OWNERCODE = COMM_AGT.OWNERCODE
        LEFT JOIN ACCRUAL_COMM_AGT_CORRECT ON A.POLICYCODE = ACCRUAL_COMM_AGT_CORRECT.POLICYCODE
        LEFT JOIN {{ ref('broker_vc_finance_insurance') }} B ON B.AGENTCODE = A.OWNERCODE
        LEFT JOIN {{ ref('ic_vc_finance_insurance') }} CARRIER ON CARRIER.ICID = A.ICID
    WHERE
        POSTDATE::DATE BETWEEN CURRENT_DATE() - 1095
        AND CURRENT_DATE()
),
WRIT_AGT AS (
    SELECT
        P.POLICYCODE,
        P.AGENTCODE,
        P.TYPE,
        B.BROKERID,
        B.AGENTNAME
    FROM
        {{ ref('policyagentlinking_finance_insurance') }} P
        JOIN {{ ref('broker_vc_finance_insurance') }} B ON B.AGENTCODE = P.AGENTCODE
    WHERE
        POLICYCODE IN (
            SELECT
                DISTINCT POLICYCODE
            FROM
                MOST_DATA
        )
        AND TYPE = 1
    GROUP BY
        1, 2, 3, 4, 5
),
POLICYCODE_TYPE AS (
    SELECT
        POLICYCODE,
        PLANTYPE
    FROM
        {{ ref('commission_vc_finance_insurance') }}
    WHERE
        POLICYCODE in (
            SELECT
                DISTINCT POLICYCODE
            FROM
                MOST_DATA
        )
    GROUP BY
        1, 2
),
POL_TYPE AS (
    SELECT
        TRIM(POLICYNUMBER) AS POLICY_NUMBER,
        MIN(PLANTYPE) AS PLANTYPE
    FROM
        {{ ref('policy_vc_finance_insurance') }}
    WHERE
        POLICYCODE IN
        (
            SELECT
                DISTINCT POLICYCODE
            FROM
                MOST_DATA
        )
    GROUP BY
        1
),
TRX_DATA AS (
    SELECT
        COMM_TRX.ACCRUALCODE,
        COMM_TRX.COMMISSIONRUNCODE,
        COMM_TRX.OWNERTYPE,
        COMM_TRX.POLICYCODE,
        COMM_TRX.CHQCODE as COMM_TRX_CHQCODE,
        MOST_DATA.CHQCODE,
        MOST_DATA.COMMISSIONABLE_AGENT,
        MOST_DATA.COMMISSIONABLE_AGENT_ID,
        MOST_DATA.POLICY_NUMBER,
        MOST_DATA.POLICYCODE,
        CASE
            WHEN COMM_TRX.OWNERTYPE = 1 THEN 'MGA'
            WHEN COMM_TRX.OWNERTYPE = 2 THEN 'AGA'
            WHEN COMM_TRX.OWNERTYPE = 3 THEN 'Broker'
            ELSE 'Unclassified'
        END AS OWNER_TYPE,
        COMM_TRX.OWNERCODE AS OWNERCODE,
        CASE
            WHEN COMM_TRX.OWNERTYPE = 1 THEN MGA.MGAID
            WHEN COMM_TRX.OWNERTYPE = 2 THEN AGA.AGANAME
            WHEN COMM_TRX.OWNERTYPE = 3 THEN B.FULLAGENTNAME
            ELSE MOST_DATA.OWNER_NAME
        END AS OWNER_NAME,
        CASE
            WHEN COMM_TRX.OWNERTYPE = 1 THEN MGA.MGAID
            WHEN COMM_TRX.OWNERTYPE = 2 THEN AGA.COMPANY
            WHEN COMM_TRX.OWNERTYPE = 3 THEN B.COMPANYNAME
            ELSE MOST_DATA.OWNER_COMPANY
        END AS OWNER_COMPANY,
        CASE
            WHEN TRXTYPE = 'FYC' THEN TRXAMOUNT
            ELSE 0
        END AS TOTAL_FYC,
        CASE
            WHEN TRXTYPE = 'FYB' THEN TRXAMOUNT
            ELSE 0
        END AS TOTAL_FYB,
        MOST_DATA.SPLITCODE
    FROM
        MOST_DATA
        LEFT JOIN {{ ref('commissiontrx_finance_insurance') }} COMM_TRX ON MOST_DATA.ACCRUALCODE_FROM_ACCURALS = COMM_TRX.ACCRUALCODE
        LEFT JOIN {{ ref('aga_finance_insurance') }} AGA ON AGA.AGAcode = COMM_TRX.OWNERCODE
        LEFT JOIN {{ ref('mga_finance_insurance') }} MGA ON MGA.MGAcode = COMM_TRX.OWNERCODE
        LEFT JOIN {{ ref('broker_vc_finance_insurance') }} B ON B.AGENTCODE = COMM_TRX.OWNERCODE
),
MAP_TRANSACTIONS as (
    SELECT
        MOST_DATA.ACCRUALCODE_FROM_ACCURALS,
        MOST_DATA.CHQCODE,
        MOST_DATA.OWNERCODE,
        MOST_DATA.COMMISSIONRUNCODE,
        MOST_DATA.COMMISSION_RUN,
        CASE
            WHEN TRX_DATA.ACCRUALCODE is NOT NULL THEN 'Transaction'
            ELSE 'Accrual'
        END AS OCCURRENCE_TYPE,
        MOST_DATA.COMMISSIONABLE_AGENT,
        MOST_DATA.COMMISSIONABLE_AGENT_ID,
        WRIT_AGT.AGENTNAME AS WRITING_AGENT,
        WRIT_AGT.BROKERID AS REP_ID,
        CASE
            WHEN TRX_DATA.ACCRUALCODE IS NOT NULL THEN TRX_DATA.OWNER_TYPE
            ELSE MOST_DATA.OWNER_TYPE
        END AS OWNER_TYPE,
        MOST_DATA.OWNER_NAME,
        TRIM(MOST_DATA.POLICY_NUMBER)::TEXT AS POLICY_NUMBER,
        MOST_DATA.POLICYCODE,
        MOST_DATA.CARRIER,
        MOST_DATA.PLANNAME AS PLAN_NAME,
        CASE
            WHEN POLICYCODE_TYPE.PLANTYPE IS NOT NULL THEN POLICYCODE_TYPE.PLANTYPE
            WHEN MOST_DATA.PLANNAME = 'Group Benefits' THEN 'Group Benefits'
            ELSE POL_TYPE.PLANTYPE
        END AS PLANCATEGORY,
        MOST_DATA.STATUS,
        CASE
            WHEN TRX_DATA.TOTAL_FYC IS NOT NULL THEN ROUND(TRX_DATA.TOTAL_FYC, 2)
            ELSE ROUND(MOST_DATA.TOTAL_FYC, 2)
        END AS TOTAL_FYC,
        CASE
            WHEN TRX_DATA.TOTAL_FYB IS NOT NULL THEN ROUND(TRX_DATA.TOTAL_FYB, 2)
            ELSE ROUND(MOST_DATA.TOTAL_FYB, 2)
        END AS TOTAL_FYB,
        MOST_DATA.POSTDATE,
        MOST_DATA.TRANSACTION_COMMISSIONABLE_PREMIUM,
        MOST_DATA.COMMISSION_RATE,
        MOST_DATA.COMMISSION_SPLIT_SHARE,
        MOST_DATA.SPLITCODE,
    FROM
        MOST_DATA
        LEFT JOIN TRX_DATA ON MOST_DATA.ACCRUALCODE_FROM_ACCURALS = TRX_DATA.ACCRUALCODE
        AND MOST_DATA.COMMISSIONRUNCODE = TRX_DATA.COMMISSIONRUNCODE
        LEFT JOIN POLICYCODE_TYPE ON POLICYCODE_TYPE.POLICYCODE = MOST_DATA.POLICYCODE
        LEFT JOIN POL_TYPE ON POL_TYPE.POLICY_NUMBER = MOST_DATA.POLICY_NUMBER
        LEFT JOIN WRIT_AGT ON WRIT_AGT.POLICYCODE = MOST_DATA.POLICYCODE
),
COMM_AGT_MISSING_MAP_ZERO AS (
    SELECT
        MAP_TRX.POLICYCODE,
        P.AGENTCODE,
        B.FULLAGENTNAME,
        B.AGENTNAME,
        BA.USERDEFINED2,
        MAP_TRX.SPLITCODE,
        MAP_TRX.OWNER_TYPE
    FROM
        MAP_TRANSACTIONS MAP_TRX 
        LEFT JOIN {{ ref('policyagentlinking_finance_insurance') }} P on P.POLICYCODE = MAP_TRX.POLICYCODE
        LEFT JOIN {{ ref('brokeradvanced_vc_finance_insurance') }} BA ON BA.AGENTCODE = P.AGENTCODE
        LEFT JOIN {{ ref('broker_vc_finance_insurance') }} B ON B.AGENTCODE = P.AGENTCODE
    WHERE
        COMMISSIONABLE_AGENT IS NULL 
        AND P.TYPE = 2
        AND SPLITCODE = 0
    GROUP BY
        1, 2, 3, 4, 5, 6, 7
),
COMM_AGT_MISSING_MAP AS (
    SELECT
        MAP_TRX.POLICYCODE,
        P.agentcode,
        B.FULLAGENTNAME,
        B.AGENTNAME,
        BA.USERDEFINED2,
        MAP_TRX.SPLITCODE,
        MAP_TRX.OWNER_TYPE
    FROM
        MAP_TRANSACTIONS MAP_TRX 
        LEFT JOIN {{ ref('policyagentlinking_finance_insurance') }} P ON P.POLICYCODE = MAP_TRX.POLICYCODE
        LEFT JOIN {{ ref('brokeradvanced_vc_finance_insurance') }} BA ON BA.AGENTCODE = P.AGENTCODE
        LEFT JOIN {{ ref('broker_vc_finance_insurance') }} B ON B.AGENTCODE = P.AGENTCODE
    WHERE
        COMMISSIONABLE_AGENT IS NULL
        AND P.TYPE = 2
        AND SPLITCODE != 0
    GROUP BY
        1, 2, 3, 4, 5, 6, 7
),
WITH_COMM_AGT_FILLEDIN AS (
    SELECT
        T.ACCRUALCODE_FROM_ACCURALS,
        T.CHQCODE,
        T.OWNERCODE,
        T.COMMISSIONRUNCODE,
        T.COMMISSION_RUN,
        T.OCCURRENCE_TYPE,
        CASE
            WHEN T.COMMISSIONABLE_AGENT IS NULL
            AND T.SPLITCODE = 0 THEN ZERO.FULLAGENTNAME
            WHEN T.COMMISSIONABLE_AGENT IS NULL
            AND T.SPLITCODE != 0 THEN MAP.FULLAGENTNAME
            ELSE T.COMMISSIONABLE_AGENT
        END AS COMMISSIONABLE_AGENT,
        CASE
            WHEN T.COMMISSIONABLE_AGENT IS NULL
            AND T.SPLITCODE = 0 THEN ZERO.USERDEFINED2
            WHEN T.COMMISSIONABLE_AGENT IS NULL
            AND T.SPLITCODE != 0 THEN MAP.USERDEFINED2
        END AS COMMISSIONABLE_AGENT_ID,
        T.WRITING_AGENT,
        T.REP_ID,
        T.OWNER_TYPE,
        T.OWNER_NAME,
        T.POLICY_NUMBER,
        T.POLICYCODE,
        T.CARRIER,
        T.PLAN_NAME,
        T.PLANCATEGORY,
        T.STATUS,
        T.TOTAL_FYC,
        T.TOTAL_FYB,
        T.POSTDATE,
        T.TRANSACTION_COMMISSIONABLE_PREMIUM,
        T.COMMISSION_RATE,
        T.COMMISSION_SPLIT_SHARE,
        T.SPLITCODE
    FROM
        MAP_TRANSACTIONS T
        LEFT JOIN COMM_AGT_MISSING_MAP_ZERO ZERO ON ZERO.POLICYCODE = T.POLICYCODE
        LEFT JOIN COMM_AGT_MISSING_MAP MAP ON MAP.POLICYCODE = T.POLICYCODE
        AND MAP.SPLITCODE = T.SPLITCODE
) 
SELECT
    MAP_TRANSACTIONS.ACCRUALCODE_FROM_ACCURALS AS ACCURALCODE,
    COMMISSION_RUN,
    OCCURRENCE_TYPE,
    MAP_TRANSACTIONS.COMMISSIONABLE_AGENT,
    MAP_TRANSACTIONS.COMMISSIONABLE_AGENT_ID,
    WRITING_AGENT,
    REP_ID,
    OWNER_TYPE,
    CASE
        WHEN MAP_TRANSACTIONS.OWNER_TYPE = 'AGA' THEN AGA.AGANAME
        WHEN MAP_TRANSACTIONS.OWNER_TYPE = 'MGA' THEN MGA.MGAID
        WHEN MAP_TRANSACTIONS.OWNER_TYPE = 'Broker' THEN B.AGENTNAME
    END AS OWNER_NAME,
    CASE
        WHEN MAP_TRANSACTIONS.OWNER_TYPE = 'AGA' THEN AGA.company
        WHEN MAP_TRANSACTIONS.OWNER_TYPE = 'MGA' THEN MGA.MGAid
    END AS OWNER_COMPANY,
    MAP_TRANSACTIONS.POLICY_NUMBER,
    MAP_TRANSACTIONS.POLICYCODE,
    CARRIER,
    PLAN_NAME,
    PLANCATEGORY,
    MAP_TRANSACTIONS.STATUS,
    MAP_TRANSACTIONS.TOTAL_FYC,
    MAP_TRANSACTIONS.TOTAL_FYB,
    POSTDATE,
    TRANSACTION_COMMISSIONABLE_PREMIUM,
    COMMISSION_RATE,
    COMMISSION_SPLIT_SHARE
FROM
    MAP_TRANSACTIONS
    LEFT JOIN {{ ref('aga_finance_insurance') }} AGA ON AGA.AGACODE = MAP_TRANSACTIONS.OWNERCODE
    LEFT JOIN {{ ref('mga_finance_insurance') }} MGA ON MGA.MGACODE = MAP_TRANSACTIONS.OWNERCODE
    LEFT JOIN {{ ref('broker_vc_finance_insurance') }} B on B.AGENTCODE = MAP_TRANSACTIONS.OWNERCODE
WHERE
    OCCURRENCE_TYPE = 'Accrual'
UNION
SELECT
    MAP_TRANSACTIONS.ACCRUALCODE_FROM_ACCURALS AS ACCURALCODE,
    COMMISSION_RUN,
    OCCURRENCE_TYPE,
    MAP_TRANSACTIONS.COMMISSIONABLE_AGENT,
    MAP_TRANSACTIONS.COMMISSIONABLE_AGENT_ID,
    WRITING_AGENT,
    REP_ID,
    TRX_DATA.OWNER_TYPE,
    TRX_DATA.OWNER_NAME,
    TRX_DATA.OWNER_COMPANY,
    MAP_TRANSACTIONS.POLICY_NUMBER,
    MAP_TRANSACTIONS.POLICYCODE,
    CARRIER,
    PLAN_NAME,
    PLANCATEGORY,
    MAP_TRANSACTIONS.STATUS,
    MAP_TRANSACTIONS.TOTAL_FYC,
    MAP_TRANSACTIONS.TOTAL_FYB,
    POSTDATE,
    TRANSACTION_COMMISSIONABLE_PREMIUM,
    COMMISSION_RATE,
    COMMISSION_SPLIT_SHARE
FROM
    MAP_TRANSACTIONS
    LEFT JOIN TRX_DATA ON MAP_TRANSACTIONS.ACCRUALCODE_FROM_ACCURALS = TRX_DATA.ACCRUALCODE
    AND MAP_TRANSACTIONS.COMMISSIONRUNCODE = TRX_DATA.COMMISSIONRUNCODE
    AND MAP_TRANSACTIONS.TOTAL_FYB = TRX_DATA.TOTAL_FYB
    AND MAP_TRANSACTIONS.TOTAL_FYC = TRX_DATA.TOTAL_FYC
WHERE
    OCCURRENCE_TYPE = 'Transaction'   