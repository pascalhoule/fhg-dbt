{{			
    config (			
        materialized="view",			
        alias='policy_fh', 			
        database='report', 			
        schema='daily_apps',
        tags=["daily_apps"]			
    )			
}}

    SELECT
    FH_POLICYCATEGORY,
    POLICYCODE,
    POL.POLICYGROUPCODE,
    FH_SERVICINGAGTCODE,
    FH_SERVICINGAGTSPLIT,
    FH_COMMISSIONINGAGTCODE,
    FH_COMMISSIONINGAGTSPLIT,
    FH_CARRIERENG,
    FH_CARRIERFR,
    POL.POLICYNUMBER,
    PLANID,
    FH_PLANTYPE,
    FH_PLANNAMEENG,
    FH_PLANNAMEFR,
    PREMIUMAMOUNT,
    CREATEDDATE,
    FH_STATUSCODE,
    FH_STATUSNAMEENG,
    FH_STATUSNAMEFR,
    FH_STATUSCATEGORY,
    APPCOUNT,
    FH_FYCSERVAMT,
    FH_FYCCOMMAMT,
    ISSUEPROVINCE,
    FH_APPSOURCE,
    FH_APPTYPE,
    POL.FH_SETTLEMENTDATE,
    POL.FH_STARTDATE,
    FH_PREMIUM,
    FH_PREM_COMMWGT,
    FH_PREM_SERVWGT,
    ISMAINCOVERAGE,
    CASE
        WHEN WRIT.POLICYGROUPCODE IS NOT NULL THEN TRUE
        ELSE FALSE
    END AS WRITTEN_LG_CASE,
    CASE
        WHEN WRIT.POLICYGROUPCODE IS NULL THEN TRUE
        ELSE FALSE
    END AS WRITTEN_NORMAL_CASE,
    CASE
        WHEN WRIT.POLICYGROUPCODE IS NOT NULL THEN WRIT.WRITTEN_FYC
    END AS WRITTEN_FYC_FULL_POLICY,
    CASE
        WHEN PD.POLICYGROUPCODE IS NOT NULL THEN TRUE
        ELSE FALSE
    END AS PAID_LG_CASE,
    CASE
        WHEN PD.POLICYGROUPCODE IS NULL THEN TRUE
        ELSE FALSE
    END AS PAID_NORMAL_CASE,
    CASE
        WHEN PD.POLICYGROUPCODE IS NOT NULL THEN PD.PAID_FYC
    END AS PAID_FYC_FULL_POLICY
FROM
    {{ ref('policy_fh_report_insurance') }} POL
    LEFT JOIN {{ ref('written_large_case_report_daily_apps') }} WRIT ON POL.POLICYGROUPCODE = WRIT.POLICYGROUPCODE
    AND POL.FH_STARTDATE = WRIT.FH_STARTDATE
    LEFT JOIN {{ ref('paid_large_case_report_daily_apps') }}  PD ON POL.POLICYGROUPCODE = PD.POLICYGROUPCODE
    AND POL.FH_SETTLEMENTDATE = PD.FH_SETTLEMENTDATE